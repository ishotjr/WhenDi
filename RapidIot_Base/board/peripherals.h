/***********************************************************************************************************************
 * This file was generated by the MCUXpresso Config Tools. Any manual edits made to this file
 * will be overwritten if the respective MCUXpresso Config Tools is used to update this file.
 **********************************************************************************************************************/

#ifndef _PERIPHERALS_H_
#define _PERIPHERALS_H_

/***********************************************************************************************************************
 * Included files
 **********************************************************************************************************************/
#include "fsl_common.h"
#include "fsl_uart.h"
#include "fsl_clock.h"
#include "fsl_adc16.h"
#include "fsl_ftm.h"
#include "fsl_dspi.h"

#if defined(__cplusplus)
extern "C" {
#endif /* __cplusplus*/

/***********************************************************************************************************************
 * Definitions
 **********************************************************************************************************************/
/* Definitions for BOARD_Init_BRIDGE_UART functional group */
/* Definition of peripheral ID */
#define BRIDGE_UART_PERIPHERAL UART4
/* Definition of the clock source frequency */
#define BRIDGE_UART_CLOCK_SOURCE CLOCK_GetFreq(UART4_CLK_SRC)
/* BRIDGE_UART interrupt vector ID (number). */
#define BRIDGE_UART_SERIAL_RX_TX_IRQN UART4_RX_TX_IRQn
/* BRIDGE_UART interrupt vector priority. */
#define BRIDGE_UART_SERIAL_RX_TX_IRQ_PRIORITY 5
/* BRIDGE_UART interrupt handler identifier. */
#define BRIDGE_UART_SERIAL_RX_TX_IRQHANDLER UART4_RX_TX_IRQHandler
/* BRIDGE_UART interrupt vector ID (number). */
#define BRIDGE_UART_SERIAL_ERROR_IRQN UART4_ERR_IRQn
/* BRIDGE_UART interrupt handler identifier. */
#define BRIDGE_UART_SERIAL_ERROR_IRQHANDLER UART4_ERR_IRQHandler

/* Definitions for BOARD_Init_BATSENS functional group */
/* Alias for ADC0 peripheral */
#define BATSENS_PERIPHERAL ADC0
/* BATSENS interrupt vector ID (number). */
#define BATSENS_IRQN ADC0_IRQn
/* BATSENS interrupt handler identifier. */
#define BATSENS_IRQHANDLER ADC0_IRQHandler

/* Definitions for BOARD_Init_TERMINAL_UART functional group */
/* Definition of peripheral ID */
#define TERMINAL_UART_PERIPHERAL UART0
/* Definition of the clock source frequency */
#define TERMINAL_UART_CLOCK_SOURCE CLOCK_GetFreq(UART0_CLK_SRC)

/* Definitions for BOARD_Init_BUZZER functional group */
/* Definition of peripheral ID */
#define BUZZER_PERIPHERAL FTM1
/* Definition of the clock source frequency */
#define BUZZER_CLOCK_SOURCE CLOCK_GetFreq(kCLOCK_BusClk)
/* BUZZER interrupt vector ID (number). */
#define BUZZER_IRQN FTM1_IRQn
/* BUZZER interrupt handler identifier. */
#define BUZZER_IRQHANDLER FTM1_IRQHandler

/* Definitions for BOARD_Init_RGB_BLIGHT functional group */
/* Definition of peripheral ID */
#define RGB_BLIGHT_PERIPHERAL FTM3
/* Definition of the clock source frequency */
#define RGB_BLIGHT_CLOCK_SOURCE CLOCK_GetFreq(kCLOCK_BusClk)
/* RGB_BLIGHT interrupt vector ID (number). */
#define RGB_BLIGHT_IRQN FTM3_IRQn
/* RGB_BLIGHT interrupt handler identifier. */
#define RGB_BLIGHT_IRQHANDLER FTM3_IRQHandler

/* Definitions for BOARD_Init_RTC_SPI functional group */
/* BOARD_Init_RTC_SPI defines for SPI1 */
/* Definition of peripheral ID */
#define RTC_SPI_PERIPHERAL SPI1
/* Definition of the clock source */
#define RTC_SPI_CLKSRC DSPI1_CLK_SRC

/* Definitions for BOARD_Init_SPI_2 functional group */
/* BOARD_Init_SPI_2 defines for SPI2 */
/* Definition of peripheral ID */
#define DSPI_2_PERIPHERAL SPI2
/* Definition of the clock source */
#define DSPI_2_CLKSRC DSPI2_CLK_SRC

/***********************************************************************************************************************
 * Global variables
 **********************************************************************************************************************/
extern const uart_config_t BRIDGE_UART_config;
extern adc16_channel_config_t BATSENS_channelsConfig[1];
extern const adc16_config_t BATSENS_config;
extern const adc16_channel_mux_mode_t BATSENS_muxMode;
extern const adc16_hardware_average_mode_t BATSENS_hardwareAverageMode;
extern const uart_config_t TERMINAL_UART_config;
extern const ftm_config_t BUZZER_config;
extern const ftm_config_t RGB_BLIGHT_config;
extern const dspi_master_config_t RTC_SPI_config;
extern dspi_master_handle_t RTC_SPI_handle;
extern const dspi_master_config_t DSPI_2_config;
extern dspi_master_handle_t DSPI_2_handle;

/***********************************************************************************************************************
 * Initialization functions
 **********************************************************************************************************************/
void BOARD_Init_BRIDGE_UART(void);
void BOARD_Init_BATSENS(void);
void BOARD_Init_TERMINAL_UART(void);
void BOARD_Init_BUZZER(void);
void BOARD_Init_RGB_BLIGHT(void);
void BOARD_Init_RTC_SPI(void);
void BOARD_Init_SPI_2(void);

/***********************************************************************************************************************
 * BOARD_InitBootPeripherals function
 **********************************************************************************************************************/
void BOARD_InitBootPeripherals(void);

#if defined(__cplusplus)
}
#endif

#endif /* _PERIPHERALS_H_ */
